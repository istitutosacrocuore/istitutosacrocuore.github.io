<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BaseFile</key>
	<string>Chapters/Document1.playgroundchapter/Pages/Template.playgroundpage/main.swift</string>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>/*percorso creato con lo scopo di mettere alla prova un determinato utente utilizzando le proprie abilit√† nella programmazione. Con l'utilizzo di piattaforme, portali, gemme e tanti altri elementi con lo scopo di rendere il gioco dinamico e mai monotono. Questo mondo tridimensionale ha lo scopo di far esercitare gli utenti alle prime armi nel mondo della programmazione, in un livello essenziale e semplice ma allo stesso tempo costruttivo e divertente*/

//veriabili e costanti
let expert = Expert()
let platformLockgreen = PlatformLock(color: #colorLiteral(red: 0.34117648005485535, green: 0.6235294342041016, blue: 0.16862745583057404, alpha: 1.0))
let byte = Character(name: .byte)
for colonne in 0 ... 4 {
    for righe in -5 ... -2 {
        world.place(Block(), at: Coordinate(column: colonne, row: righe))
    }
}

for colonne in 8 ... 11 {
    for righe in 13 ... 15 {
        world.place(Block(), at: Coordinate(column: colonne, row: righe))
    }
}
let allCoordinate = world.allPossibleCoordinates
// creazione del mare
for coordinate in allCoordinate{
    world.removeBlock(at: coordinate)
    world.placeWater(at: [coordinate])
}
let coordinate2 = world.coordinates(inColumns: [7,6,5,4], intersectingRows: [4,5,6,7])
for coordinate in coordinate2 {
    world.placeBlocks(at: [coordinate])
}
//inizzializzazione portali,personaggi, gemme e interruttori
world.place(byte, at: Coordinate(column: 11, row: 15))
let portal = Portal(color: #colorLiteral(red: 0.9254902005195618, green: 0.23529411852359772, blue: 0.10196078568696976, alpha: 1.0))
world.place(portal, atStartColumn: 8, startRow: 13, atEndColumn: 7, endRow: 7)
let portal2 = Portal(color: #colorLiteral(red: 0.9607843160629272, green: 0.7058823704719543, blue: 0.20000000298023224, alpha: 1.0))
world.place(portal2, atStartColumn: 4, startRow: 4, atEndColumn: 4, endRow: -2)
world.placeGems(at: [Coordinate(column: 8, row: 15)])
world.place(Switch(), at: Coordinate(column: 7, row: 4))
world.placeBlocks(at: [Coordinate(column: 5, row: 7)])
for i in 1 ... 2{
    world.placeBlocks(at: [Coordinate(column: 4, row: 7)])
}
world.placeBlocks(at: [Coordinate(column: 4, row: 6)])
world.placeBlocks(at: [Coordinate(column: 11, row: 14)])
for i in 1 ... 2{
    world.placeBlocks(at: [Coordinate(column: 11, row: 13)])
}
world.placeBlocks(at: [Coordinate(column: 10, row: 13)])
world.place(Platform(onLevel: 2, controlledBy: platformLockgreen), at: Coordinate(column: 1, row: -5))
for i in 1 ... 4{
    world.placeBlocks(at: [Coordinate(column: 0, row: -5)])
}
world.place(platformLockgreen,facing: west, at: Coordinate(column: 0, row: -4))
world.placeGems(at: [Coordinate(column: 1, row: -5)])
world.placeGems(at: [Coordinate(column: 0, row: -4)])
world.place(Switch(), at: Coordinate(column: 0, row: -5))
world.place(Platform(onLevel: 1, controlledBy: platformLockgreen), at: Coordinate(column: -1, row: -4))
//inizzializzazione montagne
world.place(expert, at: Coordinate(column: -1, row: -4))
world.placeBlocks(at: [Coordinate(column: 11, row: 3)])
world.placeBlocks(at: [Coordinate(column: 10, row: 2)])
world.placeBlocks(at: [Coordinate(column: 9, row: 1)])
world.placeBlocks(at: [Coordinate(column: 8, row: 0)])
for i in 1 ... 2 {
    
    
    world.placeBlocks(at: [Coordinate(column: 11, row: 2)])
    world.placeBlocks(at: [Coordinate(column: 10, row: 1)])
    world.placeBlocks(at: [Coordinate(column: 9, row: 0)])
}
for i in 1 ... 3 {
    world.placeBlocks(at: [Coordinate(column: 10, row: 0)])
    
    world.placeBlocks(at: [Coordinate(column: 11, row: 1)])
    
    
}
for i in 1 ... 4 {
    world.placeBlocks(at: [Coordinate(column: 11, row: 0)])
}
world.placeBlocks(at: [Coordinate(column: 3, row: 11)])
world.placeBlocks(at: [Coordinate(column: 2, row: 10)])
world.placeBlocks(at: [Coordinate(column: 1, row: 9)])
world.placeBlocks(at: [Coordinate(column: 0, row: 8)])
for i in 1 ... 2 {
    
    
    world.placeBlocks(at: [Coordinate(column: 2, row: 11)])
    world.placeBlocks(at: [Coordinate(column: 1, row: 10)])
    world.placeBlocks(at: [Coordinate(column: 0, row: 9)])
}
for i in 1 ... 3 {
    world.placeBlocks(at: [Coordinate(column: 0, row: 10)])
    
    world.placeBlocks(at: [Coordinate(column: 1, row: 11)])
    
    
}
for i in 1 ... 4 {
    world.placeBlocks(at: [Coordinate(column: 0, row: 11)])
}
</string>
			<key>ModifiedRange</key>
			<string>{2545, 4301}</string>
			<key>OriginalContent</key>
			<string>let hopper = Character(name: .hopper)
world.place(hopper, at: Coordinate(column: 1, row: 1))
</string>
			<key>OriginalRange</key>
			<string>{2545, 93}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>
