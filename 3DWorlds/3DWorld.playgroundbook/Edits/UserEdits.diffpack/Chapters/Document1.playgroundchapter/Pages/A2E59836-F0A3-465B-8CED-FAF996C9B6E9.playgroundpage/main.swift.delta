<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BaseFile</key>
	<string>Chapters/Document1.playgroundchapter/Pages/Template.playgroundpage/main.swift</string>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>// mondo elaborato da Gianluca De Fenza.

//data: 22 febbraio 2015, luogo: indefinito tra le montagne del Cile. La spedizione di 4 esploratori si era ormai spinta oltre dopo ben 14 giorni di viaggio, ormai stanchi e pronti a mollare si imbattono in dei resti di un tempio e iniziano a indagare.

//inizializzazione di coordinate neccessarie per lo svolgimento.
let allCoordinates = world.allPossibleCoordinates
var island : [Coordinate] = []
var sea : [Coordinate] = []
//coordinate e costruzione del fiume.
var columns = world.coordinates(inColumns: [5,6])
var rows = world.coordinates(inRows: [5,6])
for allCoordinates in rows {
    world.removeBlock(at: allCoordinates)
    world.placeWater(at: [allCoordinates])
}

for allCoordinates in columns {
    world.removeBlock(at: allCoordinates)
    world.placeWater(at: [allCoordinates])
}

//costruzione del tempio.
for coordinate in allCoordinates {
    if coordinate.column &gt; 2 &amp;&amp; coordinate.column &lt; 9 &amp;&amp; coordinate.row &gt; 2 &amp;&amp; coordinate.row &lt; 9{ 
        island.append(coordinate)
    } else {
        sea.append(coordinate)
    }
}

for allCoordinates in island {
    world.place(Block(), at: allCoordinates)
}

for coordinate in allCoordinates{
    if coordinate.column &gt; 3 &amp;&amp; coordinate.column &lt; 8 &amp;&amp; coordinate.row &gt; 3 &amp;&amp; coordinate.row &lt; 8{
        island.append(coordinate)
    }
}

for coordinate in island{
    world.place(Block(), at: coordinate)
}

for coordinate in allCoordinates{
    if coordinate.column &gt; 4 &amp;&amp; coordinate.column &lt; 7 &amp;&amp; coordinate.row &gt; 4 &amp;&amp; coordinate.row &lt; 7{
        island.append(coordinate)
    }
}

for coordinate in island{
    world.place(Block(), at: coordinate)
}

//coordinate torri.
var tower = [
    Coordinate(column: 11, row: 11), Coordinate(column: 11, row: 10), Coordinate(column: 10, row: 11), Coordinate(column: 10, row: 10), Coordinate(column: 1, row: 11), Coordinate(column: 1, row: 10), Coordinate(column: 0, row: 11), Coordinate(column: 0, row: 10), Coordinate(column: 0, row: 1), Coordinate(column: 0, row: 0), Coordinate(column: 1, row: 1), Coordinate(column: 1, row: 0), Coordinate(column: 11, row: 0), Coordinate(column: 11, row: 1), Coordinate(column: 10, row: 0), Coordinate(column: 10, row: 1)]

//costruzione torri.
for coordinate in tower { 
    for i in 1 ... 10 {
        world.place(Block(), at: Coordinate(column: coordinate.column, row: coordinate.row
        ))
    }
}

//collocamento delle gemme.
var gem = [Coordinate(column: 3, row: 3), Coordinate(column: 8, row: 8), Coordinate(column: 3, row: 8), Coordinate(column: 10, row: 11), Coordinate(column: 11, row: 0), Coordinate(column: 0, row: 10), Coordinate(column: 0, row: 1)]

for coordinate in gem{ 
    world.placeGems(at: [coordinate])
}

//posizionamento delle scale.
world.place(Stair(), atColumn: 3, row: 6)
world.place(Stair(), facing: north, atColumn: 6, row: 7)
world.place(Stair(), facing: west, atColumn: 9, row: 11)
world.place(Stair(), facing: east, atColumn: 5, row: 8)
world.place(Stair(), facing: south, atColumn: 7, row: 2)
world.place(Stair(), facing: west, atColumn: 6, row: 3)
world.place(Stair(), facing: north, atColumn: 8, row: 5)
world.place(Stair(), facing: north, atColumn: 9, row: 7)

//inizializzazione dei portale.
let portale1 = Portal(color: #colorLiteral(red: 0.9098039269447327, green: 0.47843137383461, blue: 0.6431372761726379, alpha: 1.0))
let portale2 = Portal(color: #colorLiteral(red: 0.9764705896377563, green: 0.8509804010391235, blue: 0.5490196347236633, alpha: 1.0))
let portale3 = Portal(color: #colorLiteral(red: 0.7215686440467834, green: 0.886274516582489, blue: 0.5921568870544434, alpha: 1.0))
let portale4 = Portal(color: #colorLiteral(red: 0.8078431487083435, green: 0.027450980618596077, blue: 0.3333333432674408, alpha: 1.0))
let portale5 = Portal(color: #colorLiteral(red: 0.239215686917305, green: 0.6745098233222961, blue: 0.9686274528503418, alpha: 1.0))
let portale6 = Portal(color: #colorLiteral(red: 0.5568627715110779, green: 0.3529411852359772, blue: 0.9686274528503418, alpha: 1.0))

//collocamento dei portali.
world.place(portale1, atColumn: 3, row: 5 )
world.place(portale2, atColumn: 9, row: 2)
world.place(portale3, atColumn: 5, row: 7)
world.place(portale4, atColumn: 4, row: 11)
world.place(portale5, atColumn: 11, row: 11)
world.place(portale6, atColumn: 4, row: 3)

//disattivazione dei portali
portale2.isActive = false
portale3.isActive = false

//posizionamento muretti.
world.place(Wall(), facing: north, atColumn: 2, row: 7)
world.place(Wall(), facing: north, atColumn: 1, row: 7)
world.place(Wall(), facing: south, atColumn: 0, row: 4)
world.place(Wall(), facing: west, atColumn: 4, row: 1)
world.place(Wall(), facing: south, atColumn: 7, row: 1)
world.place(Wall(), facing: north, atColumn: 9, row: 4)
world.place(Wall(), facing: east, atColumn: 11, row: 4)
world.place(Wall(), facing: east, atColumn: 7, row: 10)
world.place(Wall(), facing: east, atColumn: 4, row: 11)
world.place(Wall(), facing: east, atColumn: 7, row: 9)

//inizializzazione dei personaggi.
let xander = Character(name: .byte)
let billie = Character(name: .hopper)
let aaron = Character(name: .blu)
let ella = Expert()

//collocamento dei personaggi.
world.place(xander, facing: south, atColumn: 9, row: 3)
world.place(billie, facing: east, atColumn: 8, row: 2)
world.place(aaron, facing: north, atColumn: 8, row: 7)
world.place(ella, facing: south, atColumn: 3, row: 6)

//azioni svolte dai personaggi.
xander.danceLikeNoOneIsWatching()
billie.breakItDown()
aaron.grumbleGrumble()
ella.collectGem()





</string>
			<key>ModifiedRange</key>
			<string>{2545, 5530}</string>
			<key>OriginalContent</key>
			<string>let hopper = Character(name: .hopper)
world.place(hopper, at: Coordinate(column: 1, row: 1))
</string>
			<key>OriginalRange</key>
			<string>{2545, 93}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>
