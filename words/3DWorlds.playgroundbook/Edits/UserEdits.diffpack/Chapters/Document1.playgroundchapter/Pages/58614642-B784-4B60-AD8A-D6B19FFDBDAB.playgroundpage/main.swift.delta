<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BaseFile</key>
	<string>Chapters/Document1.playgroundchapter/Pages/Template.playgroundpage/main.swift</string>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>//Liliana conte 

//questo percorso ha lo scopo di percorrere l'isola e prendere la gemma, il personaggio si chiama bayte. Obbiettivo: raccogliere la gemma.


let coordinate1 = world.coordinates(inColumns: [0,1,2,3,4,5,6,7,8,9,10,11], intersectingRows: [4,5,6,7])
for coordinate in coordinate1 {
    world.removeBlock(at:coordinate)
    world.placeWater(at: [coordinate])
}
let coordinate2 = world.coordinates(inColumns: [0,1,2,3,4,5,6,7,8,9,10,11], intersectingRows: [8,3])
for coordinate in coordinate2 {
    for i in 1 ... 3 {
        world.placeBlocks(at: [coordinate])
    }
    
}
let coordinate3 = world.coordinates(inColumns: [4,5,6,7], intersectingRows: [5,6])
for coordinate in coordinate3 {
    for i in 1 ... 3 {
        world.place(Block(), at: coordinate)
    }
    
}
let coordinate4 = world.coordinates(inColumns: [0,1,2,3,4,5,6,7,8,9,10,11], intersectingRows: [2])
for coordinate in coordinate4 {
    for i in 1 ... 2 {
        world.place(Block(), at: coordinate)
    }
    world.place(Stair(), at: coordinate)
}
let coordinate5 = world.coordinates(inColumns: [0,1,2,3,4,5,6,7,8,9,10,11], intersectingRows: [9])
for coordinate in coordinate5 {
    for i in 1 ... 2 {
        world.place(Block(), at: coordinate)
    }
    world.place(Stair(),facing:north, at: coordinate)
}
let coordinate6 = world.coordinates(inColumns: [0,1,2,3,4,5,6,7,8,9,10,11], intersectingRows: [1])
for coordinate in coordinate6 {
    for i in 1 ... 1 {
        world.place(Block(), at: coordinate)
    }
    world.place(Stair(), at: coordinate)
}
let coordinate7 = world.coordinates(inColumns: [0,1,2,3,4,5,6,7,8,9,10,11], intersectingRows: [10])
for coordinate in coordinate7 {
    for i in 1 ... 1 {
        world.place(Block(), at: coordinate)
    }
    world.place(Stair(),facing: north, at: coordinate)
}

world.place(Platform(onLevel: 6, controlledBy: PlatformLock()), at: Coordinate(column: 10, row: 7))
world.place(Platform(onLevel: 7, controlledBy: PlatformLock()), at: Coordinate(column: 10, row: 6))
world.place(Platform(onLevel: 7, controlledBy: PlatformLock()), at: Coordinate(column: 10, row: 5))
world.place(Platform(onLevel: 6, controlledBy: PlatformLock()), at: Coordinate(column: 10, row: 4))
world.placeGems(at: [Coordinate(column: 0, row: 3)])
let byte = Character(name: .byte)
world.place(byte, at: Coordinate(column: 0, row: 8))
</string>
			<key>ModifiedRange</key>
			<string>{2545, 2344}</string>
			<key>OriginalContent</key>
			<string>let hopper = Character(name: .hopper)
world.place(hopper, at: Coordinate(column: 1, row: 1))
</string>
			<key>OriginalRange</key>
			<string>{2545, 93}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>
