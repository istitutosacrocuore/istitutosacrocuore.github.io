<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BaseFile</key>
	<string>Chapters/Document1.playgroundchapter/Pages/Template.playgroundpage/main.swift</string>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>//Mondo di Marco Jin,in questo livello devi pensare come entrare nel portale e raccogliere le gemme, un bocca a lupo! 
/*
 for colonne in 0 ... 4 {
 for righe in -5 ... -2 {
 world.place(Block(), at: Coordinate(column: colonne, row: righe))
 }
 }
 
 for colonne in 8 ... 11 {
 for righe in 13 ... 15 {
 world.place(Block(), at: Coordinate(column: colonne, row: righe))
 }
 }
 
 */

let coordi = world.coordinates(inColumns: [9, 10, 11], intersectingRows: [2, 1, 0])
for coordi in coordi {
    for i in 1...10 {
        world.place(Block(), at: coordi)
    }
}
let coords = world.coordinates(inColumns: [11, 10, 9], intersectingRows: [11, 10, 9])
for coor in coords {
    for i in 1...10 {
        world.place(Block(), at: coor)
    }
}
let curtis = world.coordinates(inColumns: [0, 1, 2], intersectingRows: [9, 10, 11])
for curtis in curtis {
    for i in 1...10 {
        world.place(Block(), at: curtis)
    }
}
let curti = world.coordinates(inColumns: [0, 1, 2], intersectingRows: [0, 1, 2])
for curti in curti {
    for i in 1...10 {
        world.place(Block(), at: curti)
        
    }
}
let coordinate1 = world.coordinates(inColumns: [11,10,9,8,7], intersectingRows: [3,4])
for coordinate in coordinate1 {
    world.removeBlock(at: coordinate)
    world.placeWater(at: [coordinate])
}
let coordinate2 = world.coordinates(inColumns: [11,10,9,8,7], intersectingRows: [7,8])
for coordinate in coordinate2 {
    world.removeBlock(at: coordinate)
    world.placeWater(at: [coordinate])
}
let coordinate3 = world.coordinates(inColumns: [0,1,2,3,4], intersectingRows: [7,8])
for coordinate in coordinate3 {
    world.removeBlock(at: coordinate)
    world.placeWater(at: [coordinate])
}
let coordinate4 = world.coordinates(inColumns: [0,1,2,3,4], intersectingRows: [3,4])
for coordinate in coordinate4 {
    world.removeBlock(at: coordinate)
    world.placeWater(at: [coordinate])
}
let coordinate5 = world.coordinates(inColumns: [4,3], intersectingRows: [9,10,11])
for coordinate in coordinate5 {
    world.removeBlock(at: coordinate)
    world.placeWater(at: [coordinate])
}
let coordinate6 = world.coordinates(inColumns: [7,8], intersectingRows: [9,10,11])
for coordinate in coordinate6 {
    world.removeBlock(at: coordinate)
    world.placeWater(at: [coordinate])
}
let coordinate7 = world.coordinates(inColumns: [7,8], intersectingRows: [0,1,2])
for coordinate in coordinate7 {
    world.removeBlock(at: coordinate)
    world.placeWater(at: [coordinate])
}
let coordinate8 = world.coordinates(inColumns: [4,3], intersectingRows: [0,1,2])
for coordinate in coordinate8 {
    world.removeBlock(at: coordinate)
    world.placeWater(at: [coordinate])
}
world.placeBlocks(at: [Coordinate(column: 5, row: 5)])
world.placeBlocks(at: [Coordinate(column: 6, row: 5)])
world.placeBlocks(at: [Coordinate(column: 5, row: 6)])
world.placeBlocks(at: [Coordinate(column: 6, row: 6)])
world.place(Portal(color: #colorLiteral(red: 0.46666666865348816, green: 0.7647058963775635, blue: 0.2666666805744171, alpha: 1.0)), between: Coordinate(column: 6, row: 6), and: Coordinate(column: 10, row: 1))
world.place(Portal(color: #colorLiteral(red: 0.4745098054409027, green: 0.8392156958580017, blue: 0.9764705896377563, alpha: 1.0)), between: Coordinate(column: 10, row: 10), and: Coordinate(column: 5, row: 6))
world.place(Portal(color: #colorLiteral(red: 0.9254902005195618, green: 0.23529411852359772, blue: 0.10196078568696976, alpha: 1.0)), between: Coordinate(column: 5, row: 5), and: Coordinate(column: 1, row: 10))
world.place(Portal(color: #colorLiteral(red: 0.9607843160629272, green: 0.7058823704719543, blue: 0.20000000298023224, alpha: 1.0)), between: Coordinate(column: 6, row: 5), and: Coordinate(column: 1, row: 1))
</string>
			<key>ModifiedRange</key>
			<string>{2545, 3715}</string>
			<key>OriginalContent</key>
			<string></string>
			<key>OriginalRange</key>
			<string>{2545, 0}</string>
		</dict>
		<dict>
			<key>ModifiedContent</key>
			<string>let expert = Expert()
let blu = Character(name: .blu)
let byte = Character(name: .byte)
world.place(hopper, facing: west, at: Coordinate(column: 11, row: 6))
world.place(expert, facing: east, at: Coordinate(column: 0, row: 5))
world.place(byte, facing: north, at: Coordinate(column: 6, row: 0))
world.place(blu, facing: south, at: Coordinate(column: 5, row: 11))
world.placeGems(at: [Coordinate(column: 11, row: 10), Coordinate(column: 10, row: 11), Coordinate(column: 9, row: 10), Coordinate(column: 10, row: 9), Coordinate(column: 1, row: 9), Coordinate(column: 1, row: 11), Coordinate(column: 0, row: 10), Coordinate(column: 2, row: 10), Coordinate(column: 2, row: 1), Coordinate(column: 0, row: 1), Coordinate(column: 1, row: 0), Coordinate(column: 1, row: 2), Coordinate(column: 11, row: 1), Coordinate(column: 10, row: 0), Coordinate(column: 9, row: 1), Coordinate(column: 10, row: 2)])




</string>
			<key>ModifiedRange</key>
			<string>{6298, 897}</string>
			<key>OriginalContent</key>
			<string>world.place(hopper, at: Coordinate(column: 1, row: 1))
</string>
			<key>OriginalRange</key>
			<string>{2583, 55}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>
